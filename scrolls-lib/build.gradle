apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'com.android.library'

buildscript {
    repositories {
        google()
        mavenCentral()
    }
}

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    compileSdkVersion project.ext.versionCompileSdk
    buildToolsVersion project.ext.versionBuildTools
    defaultConfig {
        minSdkVersion project.ext.versionMinSdkVersion
        targetSdkVersion project.ext.versionTargetSdk
        versionName project.ext.versionName
        versionCode project.ext.versionCode
        project.archivesBaseName = "scrolls-" + project.ext.versionName
        // Use a separate field for the version name
        buildConfigField "String", 'VERSION_NAME', "\"${project.ext.versionName}\""

        println 'CONF: versionName is set to: ' + project.ext.versionName
        println 'CONF: publishVersionName is set to: ' + project.ext.publishVersionName
        println 'CONF: versionCode is set to: ' + project.ext.versionCode
        println 'CONF: is a release build: ' + project.ext.isRelease
    }
}

project.ext.libFiles = fileTree(project(':scrolls-lib').projectDir.absolutePath + '/build/outputs/aar/') {
    include '*.aar'
}

project.ext.libProguardFiles = fileTree(project(':scrolls-lib').projectDir.absolutePath + '/build/outputs/mapping/release') {
    include '*mapping.txt'
}

task(lib_copy_artifacts) doLast {
    if (project.ext.artifactDir != null) {
        println "Coping Scrolls Library artifacts to " + project.ext.artifactDir + " .."
        copy {
            rename('mapping.txt', "${project.name}-mapping-${project.ext.versionCode}.txt")
            from libFiles
            from libProguardFiles
            into file(project.ext.artifactDir)
            eachFile { println it.file }
        }
    }
}

def GROUP_BUILD_TASKS = 'Build'
task buildAndPublishRelease(dependsOn: [':scrolls-sample-java:buildAllRelease', 'publish'])
buildAndPublishRelease.group = GROUP_BUILD_TASKS
buildAndPublishRelease.description = "Build Scrolls library release version and publish it"

publish.mustRunAfter tasks.findByPath(':scrolls-sample-java:buildAllRelease')

dependencies {
    implementation "com.android.support:support-v4:$rootProject.ext.versionSupport"
    implementation "com.android.support:support-annotations:$rootProject.ext.versionSupport"
}

Properties properties = new Properties()
try {
    properties.load(project.rootProject.file('publish.properties').newDataInputStream())
} catch (Exception ignored) {
    println "publish.properties missing"
}

ext {
    libraryVersion = project.ext.publishVersionName
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'mobi.lab.scrolls'
                artifactId = 'scrolls'
                version = project.ext.publishVersionName
                from components.release
                pom {
                    packaging = 'aar'
                    name = 'Scrolls Logging library.'
                    description = 'Scrolls v2 library for Android. Allows file logging and log sharing via the system share action.'
                    url = 'https://github.com/MobiSolutions/scrolls-android'

                    licenses {
                        license {
                            name = 'The MIT License'
                            url = 'https://opensource.org/licenses/mit-license.php'
                        }
                    }
                    developers {
                        developer {
                            name = properties.getProperty("publish_developer_name")
                            name = properties.getProperty("publish_developer_name")
                            email = properties.getProperty("publish_developer_email")
                            organization = properties.getProperty("publish_developer_organization")
                            organizationUrl = properties.getProperty("publish_developer_organization_url")
                        }
                    }
                    scm {
                        connection = 'https://github.com/MobiSolutions/scrolls-android.git'
                        developerConnection = 'https://github.com/MobiSolutions/scrolls-android.git'
                        url = 'https://github.com/MobiSolutions/scrolls-android'
                    }
                }
            }
        }
        repositories {
            maven {
                name = "OSSRH"
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
                credentials {
                    username = properties.getProperty("publish_ossrh_username")
                    password = properties.getProperty("publish_ossrh_password")
                }
            }
        }
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }

    javadoc.failOnError = false
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }

    signing {
        def signingKey = properties.getProperty("signing_key")
        def signingPassword = properties.getProperty("signing_password")
        useInMemoryPgpKeys(signingKey, signingPassword)
        sign publishing.publications
    }
}



