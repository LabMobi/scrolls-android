buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

Properties properties = new Properties()
try {
    properties.load(project.rootProject.file('publish.properties').newDataInputStream())
} catch (Exception ignored) {
    println "publish.properties missing"
}

ext {
    bintrayRepo = 'mobi.lab.scrolls'
    bintrayName = 'scrolls-android'

    publishedGroupId = 'lab.mobi.scrolls'
    libraryName = 'Scrolls Logging library.'
    artifact = 'scrolls'

    libraryDescription = 'Scrolls v2 library for Android. Allows file logging and log sharing via the system share action.'

    siteUrl = 'https://github.com/MobiSolutions/scrolls-android'
    gitUrl = 'https://github.com/MobiSolutions/scrolls-android.git'

    libraryVersion = project.ext.publishVersionName

    developerId = properties.getProperty("bintray_developer_id")
    developerName = properties.getProperty("bintray_developer_name")
    developerEmail = properties.getProperty("bintray_developer_email")

    licenseName = 'The MIT License'
    licenseUrl = 'https://opensource.org/licenses/mit-license.php'
    allLicenses = ["MIT"]
}

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    compileSdkVersion project.ext.versionCompileSdk
    buildToolsVersion project.ext.versionBuildTools
    defaultConfig {
        minSdkVersion project.ext.versionMinSdkVersion
        targetSdkVersion project.ext.versionTargetSdk
        versionName project.ext.versionName
        versionCode project.ext.versionCode
        project.archivesBaseName = "scrolls-" + project.ext.versionName

        println 'CONF: versionName is set to: ' + project.ext.versionName
        println 'CONF: publishVersionName is set to: ' + project.ext.publishVersionName
        println 'CONF: versionCode is set to: ' + project.ext.versionCode
        println 'CONF: is a release build: ' + project.ext.isRelease
    }
}

project.ext.libFiles = fileTree(project(':scrolls-lib').projectDir.absolutePath + '/build/outputs/aar/') {
    include '*.aar'
}

project.ext.libProguardFiles = fileTree(project(':scrolls-lib').projectDir.absolutePath + '/build/outputs/mapping/release') {
    include '*mapping.txt'
}

task(lib_copy_artifacts) doLast {
    if (project.ext.artifactDir != null) {
        println "Coping Scrolls Library artifacts to " + project.ext.artifactDir + " .."
        copy {
            rename('mapping.txt', "${project.name}-mapping-${project.ext.versionCode}.txt")
            from libFiles
            from libProguardFiles
            into file(project.ext.artifactDir)
            eachFile { println it.file }
        }
    }
}


def GROUP_BUILD_TASKS = 'Build'
task buildLibDebug(dependsOn: [':scrolls-lib:clean', ':scrolls-lib:build', ':scrolls-lib:lib_copy_artifacts'])
buildLibDebug.group = GROUP_BUILD_TASKS
buildLibDebug.description = "Build Scrolls library debug version"

task buildLibRelease(dependsOn: ['buildLibDebug'])
buildLibRelease.group = GROUP_BUILD_TASKS
buildLibRelease.description = "Build Scrolls library release version"

task buildAndPublishLibRelease(dependsOn: ['buildLibRelease', 'install', 'bintrayUpload'])
buildLibRelease.group = GROUP_BUILD_TASKS
buildLibRelease.description = "Build Scrolls library release version and publish it"

build.mustRunAfter clean

buildAndPublishLibRelease.mustRunAfter buildLibRelease

dependencies {
    implementation "com.android.support:support-v4:$rootProject.ext.versionSupport"
}

apply from: 'publish.gradle'