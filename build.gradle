/**
 * Major version component.
 */
final String VERSION_MAJOR = "2"
/**
 * Feature version component.
 */
final String VERSION_FEATURE = "0"
/**
 * Tweak version component.
 */
final String VERSION_MINOR = "6"

buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0'
    }
}

ext {
    versionName = "0.0.1"
    publicVersionName = "0.0.1"
    versionCode = 1
    isRelease = false
}

allprojects {
    ext {
        // Paths
        artifactDir = "" // We will set this down below


        // Tool versions
        versionCompileSdk = 28
        versionBuildTools = '28.0.3'
        versionMinSdkVersion = 16
        versionTargetSdk = 28

        // Dependency versions
        versionSupport = "27.1.1"
    }

    buildscript {
        project.group = "mobi"
        // Yes yes, I am cheating here.
        project.ext.isRelease = project.gradle.startParameter.taskNames.contains("buildAllRelease") || project.gradle.startParameter.taskNames.contains("buildAndPublishLibRelease") || project.gradle.startParameter.taskNames.contains("buildLibRelease")

        String suppliedBuildNumber = "$System.env.BUILD_NUMBER"
        // VersionCode
        if (suppliedBuildNumber == null || suppliedBuildNumber.equals("") || suppliedBuildNumber.equals("null")) {
            project.ext.versionCode = 1
        } else {
            project.ext.versionCode = Integer.valueOf(suppliedBuildNumber) + 1
        }

        // VersionName
        String baseVersionName = VERSION_MAJOR + "." + VERSION_FEATURE + "." + VERSION_MINOR
        // This one we use internally and for artifact naming
        project.ext.versionName = baseVersionName + (isRelease ? ".release_" : ".devbuild_") + project.ext.versionCode
        // This one we use for publishing
        project.ext.publishVersionName = baseVersionName

        // This is a synonym
        project.version = project.ext.versionName

        if (project.gradle.startParameter.taskNames.contains("buildLibDebug") || project.gradle.startParameter.taskNames.contains("buildLibRelease")) {
            project.ext.artifactDir = null
        } else {
            project.ext.artifactDir = rootDir.absolutePath + '/scrolls-sample-java/build/outputs'
        }
    }
    repositories {
        google()
        flatDir {
            dirs 'libs'
        }
        mavenCentral()
        jcenter()
    }
}